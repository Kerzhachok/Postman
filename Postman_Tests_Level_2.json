{
	"info": {
		"_postman_id": "df25b6a8-7ba7-4990-95a5-8a0834d3fed1",
		"name": "HW3_Postman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var respData = pm.response.json();",
							"var auth_token = respData.token;",
							"console.log(\"token = \" + auth_token);",
							"",
							"pm.environment.set(\"auth_token\", auth_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Kerzhachok",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var respdata = pm.response.json();",
							"var reqdata = JSON.parse(request.data);",
							"",
							"//2) Проверка структуры json в ответе.",
							"var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"person\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"u_age\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"u_name\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"string\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"u_age\",",
							"        \"u_name\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"qa_salary_after_12_months\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"qa_salary_after_6_months\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"start_qa_salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"person\",",
							"    \"qa_salary_after_12_months\",",
							"    \"qa_salary_after_6_months\",",
							"    \"start_qa_salary\"",
							"  ]",
							"}",
							"",
							"",
							"pm.test(\"Schema is ok\", () => {",
							"    pm.response.to.have.jsonSchema(schema);",
							"})",
							"",
							"// 3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"pm.test(\"Multiplication results are correct\", () => {",
							"    pm.expect(respdata.qa_salary_after_12_months).to.eql(reqdata.salary*2.9);",
							"    pm.expect(respdata.qa_salary_after_6_months).to.eql(reqdata.salary*2);",
							"    pm.expect(respdata.start_qa_salary).to.eql(reqdata.salary);",
							"    pm.expect(respdata.person.u_salary_1_5_year).to.eql(reqdata.salary*4)",
							"})",
							"",
							"// 4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"pm.environment.set(\"salary2\", respdata.person.u_salary_1_5_year)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"age\": 34,\n\"salary\": 1000,\n\"name\": \"olga\",\n\"auth_token\": \"{{auth_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
<<<<<<< HEAD
}
=======
}
>>>>>>> f385260a3dfa5d6cc0cee58e94dd3e8e58bb23cb
